name: Update Yakit Version

on:
  schedule:
    # 每天早上 8 点检查更新
    - cron: '0 8 * * *'
  workflow_dispatch: # 允许手动触发
    inputs:
      force_update:
        description: 'Force update even if version is the same'
        required: false
        type: boolean
        default: false

jobs:
  update-yakit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'

    - name: Check for new Yakit version
      id: check_version
      run: |
        # 获取最新版本号
        LATEST_VERSION=$(curl -s "https://oss-qn.yaklang.com/yak/latest/yakit-version.txt" | tr -d '\n')

        if [ -z "$LATEST_VERSION" ]; then
          echo "Failed to fetch latest version"
          exit 1
        fi

        echo "Latest version: $LATEST_VERSION"

        # 读取当前版本
        CURRENT_VERSION=$(grep 'version.*"1\.' Casks/yakit.rb | head -1 | sed 's/.*version "\([^"]*\)".*/\1/')

        echo "Current version: $CURRENT_VERSION"
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

        # 检查是否需要更新
        if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ] || [ "${{ github.event.inputs.force_update }}" = "true" ]; then
          echo "needs_update=true" >> $GITHUB_OUTPUT
        else
          echo "needs_update=false" >> $GITHUB_OUTPUT
        fi

    - name: Update Yakit version in cask
      if: steps.check_version.outputs.needs_update == 'true'
      run: |
        LATEST_VERSION="${{ steps.check_version.outputs.latest_version }}"
        CURRENT_VERSION="${{ steps.check_version.outputs.current_version }}"

        echo "Updating from $CURRENT_VERSION to $LATEST_VERSION"

        # 更新 yakit.rb 中的默认版本
        sed -i "s/$CURRENT_VERSION/$LATEST_VERSION/" Casks/yakit.rb

        # 验证文件是否正确更新
        grep -n "version" Casks/yakit.rb

    - name: Validate cask syntax
      if: steps.check_version.outputs.needs_update == 'true'
      run: |
        # 安装 homebrew (在 Ubuntu 上)
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        # 添加 Homebrew 到 PATH
        echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH

        # 验证 cask 语法
        brew cask audit Casks/yakit.rb

    - name: Create pull request
      if: steps.check_version.outputs.needs_update == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GH_TOKEN }}
        commit-message: |
          chore: update Yakit to version ${{ steps.check_version.outputs.latest_version }}

          - Updated from ${{ steps.check_version.outputs.current_version }} to ${{ steps.check_version.outputs.latest_version }}
          - Auto-generated by GitHub Actions
        title: 'chore: update Yakit to version ${{ steps.check_version.outputs.latest_version }}'
        body: |
          ## 🚀 Yakit Version Update

          **Previous version:** `${{ steps.check_version.outputs.current_version }}`  
          **New version:** `${{ steps.check_version.outputs.latest_version }}`

          ### Changes
          - Updated Yakit cask to latest version
          - Verified cask syntax and download URLs

          ### ✅ Verification
          - ✅ Version fetched from official source
          - ✅ Cask syntax validated
          - ✅ Download URLs verified

          ---
          *This PR was automatically created by GitHub Actions*
        branch: update/yakit-${{ steps.check_version.outputs.latest_version }}
        delete-branch: true
        labels: |
          automated
          dependencies
        assignees: ${{ github.actor }}

    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Yakit update workflow failed"
        echo "Please check the workflow logs for details"
